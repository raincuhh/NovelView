/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthorizedImport } from './routes/unauthorized'
import { Route as TestImport } from './routes/test'
import { Route as OnboardingRouteImport } from './routes/_onboarding/route'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as IndexImport } from './routes/index'
import { Route as LegalTosImport } from './routes/legal/tos'
import { Route as LegalPrivacyPolicyImport } from './routes/legal/privacy-policy'
import { Route as OnboardingOnboardingImport } from './routes/_onboarding/onboarding'
import { Route as AppSearchRouteImport } from './routes/_app/_search/route'
import { Route as AppLibrariesRouteImport } from './routes/_app/_libraries/route'
import { Route as AppBrowseRouteImport } from './routes/_app/_browse/route'
import { Route as AppSearchSearchImport } from './routes/_app/_search/search'
import { Route as AppLibrariesLibrariesImport } from './routes/_app/_libraries/libraries'
import { Route as AppHomeHomeImport } from './routes/_app/_home/home'
import { Route as AppBrowseBrowseImport } from './routes/_app/_browse/browse'
import { Route as AppLibraryLibraryIdRouteImport } from './routes/_app/library/$libraryId/route'
import { Route as AppLibraryLibraryIdIndexImport } from './routes/_app/library/$libraryId/index'
import { Route as AppHomeHomeRecentsImport } from './routes/_app/_home/home.recents'
import { Route as AppHomeHomeAnalyticsImport } from './routes/_app/_home/home.analytics'

// Create/Update Routes

const UnauthorizedRoute = UnauthorizedImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRoute,
} as any)

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRouteRoute = OnboardingRouteImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LegalTosRoute = LegalTosImport.update({
  id: '/legal/tos',
  path: '/legal/tos',
  getParentRoute: () => rootRoute,
} as any)

const LegalPrivacyPolicyRoute = LegalPrivacyPolicyImport.update({
  id: '/legal/privacy-policy',
  path: '/legal/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingOnboardingRoute = OnboardingOnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const AppSearchRouteRoute = AppSearchRouteImport.update({
  id: '/_search',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppLibrariesRouteRoute = AppLibrariesRouteImport.update({
  id: '/_libraries',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppBrowseRouteRoute = AppBrowseRouteImport.update({
  id: '/_browse',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSearchSearchRoute = AppSearchSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AppSearchRouteRoute,
} as any)

const AppLibrariesLibrariesRoute = AppLibrariesLibrariesImport.update({
  id: '/libraries',
  path: '/libraries',
  getParentRoute: () => AppLibrariesRouteRoute,
} as any)

const AppHomeHomeRoute = AppHomeHomeImport.update({
  id: '/_home/home',
  path: '/home',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppBrowseBrowseRoute = AppBrowseBrowseImport.update({
  id: '/browse',
  path: '/browse',
  getParentRoute: () => AppBrowseRouteRoute,
} as any)

const AppLibraryLibraryIdRouteRoute = AppLibraryLibraryIdRouteImport.update({
  id: '/library/$libraryId',
  path: '/library/$libraryId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppLibraryLibraryIdIndexRoute = AppLibraryLibraryIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLibraryLibraryIdRouteRoute,
} as any)

const AppHomeHomeRecentsRoute = AppHomeHomeRecentsImport.update({
  id: '/recents',
  path: '/recents',
  getParentRoute: () => AppHomeHomeRoute,
} as any)

const AppHomeHomeAnalyticsRoute = AppHomeHomeAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AppHomeHomeRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedImport
      parentRoute: typeof rootRoute
    }
    '/_app/_browse': {
      id: '/_app/_browse'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppBrowseRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_libraries': {
      id: '/_app/_libraries'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLibrariesRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_search': {
      id: '/_app/_search'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppSearchRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_onboarding/onboarding': {
      id: '/_onboarding/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingOnboardingImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/legal/privacy-policy': {
      id: '/legal/privacy-policy'
      path: '/legal/privacy-policy'
      fullPath: '/legal/privacy-policy'
      preLoaderRoute: typeof LegalPrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/legal/tos': {
      id: '/legal/tos'
      path: '/legal/tos'
      fullPath: '/legal/tos'
      preLoaderRoute: typeof LegalTosImport
      parentRoute: typeof rootRoute
    }
    '/_app/library/$libraryId': {
      id: '/_app/library/$libraryId'
      path: '/library/$libraryId'
      fullPath: '/library/$libraryId'
      preLoaderRoute: typeof AppLibraryLibraryIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_browse/browse': {
      id: '/_app/_browse/browse'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof AppBrowseBrowseImport
      parentRoute: typeof AppBrowseRouteImport
    }
    '/_app/_home/home': {
      id: '/_app/_home/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppHomeHomeImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_libraries/libraries': {
      id: '/_app/_libraries/libraries'
      path: '/libraries'
      fullPath: '/libraries'
      preLoaderRoute: typeof AppLibrariesLibrariesImport
      parentRoute: typeof AppLibrariesRouteImport
    }
    '/_app/_search/search': {
      id: '/_app/_search/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AppSearchSearchImport
      parentRoute: typeof AppSearchRouteImport
    }
    '/_app/_home/home/analytics': {
      id: '/_app/_home/home/analytics'
      path: '/analytics'
      fullPath: '/home/analytics'
      preLoaderRoute: typeof AppHomeHomeAnalyticsImport
      parentRoute: typeof AppHomeHomeImport
    }
    '/_app/_home/home/recents': {
      id: '/_app/_home/home/recents'
      path: '/recents'
      fullPath: '/home/recents'
      preLoaderRoute: typeof AppHomeHomeRecentsImport
      parentRoute: typeof AppHomeHomeImport
    }
    '/_app/library/$libraryId/': {
      id: '/_app/library/$libraryId/'
      path: '/'
      fullPath: '/library/$libraryId/'
      preLoaderRoute: typeof AppLibraryLibraryIdIndexImport
      parentRoute: typeof AppLibraryLibraryIdRouteImport
    }
  }
}

// Create and export the route tree

interface AppBrowseRouteRouteChildren {
  AppBrowseBrowseRoute: typeof AppBrowseBrowseRoute
}

const AppBrowseRouteRouteChildren: AppBrowseRouteRouteChildren = {
  AppBrowseBrowseRoute: AppBrowseBrowseRoute,
}

const AppBrowseRouteRouteWithChildren = AppBrowseRouteRoute._addFileChildren(
  AppBrowseRouteRouteChildren,
)

interface AppLibrariesRouteRouteChildren {
  AppLibrariesLibrariesRoute: typeof AppLibrariesLibrariesRoute
}

const AppLibrariesRouteRouteChildren: AppLibrariesRouteRouteChildren = {
  AppLibrariesLibrariesRoute: AppLibrariesLibrariesRoute,
}

const AppLibrariesRouteRouteWithChildren =
  AppLibrariesRouteRoute._addFileChildren(AppLibrariesRouteRouteChildren)

interface AppSearchRouteRouteChildren {
  AppSearchSearchRoute: typeof AppSearchSearchRoute
}

const AppSearchRouteRouteChildren: AppSearchRouteRouteChildren = {
  AppSearchSearchRoute: AppSearchSearchRoute,
}

const AppSearchRouteRouteWithChildren = AppSearchRouteRoute._addFileChildren(
  AppSearchRouteRouteChildren,
)

interface AppLibraryLibraryIdRouteRouteChildren {
  AppLibraryLibraryIdIndexRoute: typeof AppLibraryLibraryIdIndexRoute
}

const AppLibraryLibraryIdRouteRouteChildren: AppLibraryLibraryIdRouteRouteChildren =
  {
    AppLibraryLibraryIdIndexRoute: AppLibraryLibraryIdIndexRoute,
  }

const AppLibraryLibraryIdRouteRouteWithChildren =
  AppLibraryLibraryIdRouteRoute._addFileChildren(
    AppLibraryLibraryIdRouteRouteChildren,
  )

interface AppHomeHomeRouteChildren {
  AppHomeHomeAnalyticsRoute: typeof AppHomeHomeAnalyticsRoute
  AppHomeHomeRecentsRoute: typeof AppHomeHomeRecentsRoute
}

const AppHomeHomeRouteChildren: AppHomeHomeRouteChildren = {
  AppHomeHomeAnalyticsRoute: AppHomeHomeAnalyticsRoute,
  AppHomeHomeRecentsRoute: AppHomeHomeRecentsRoute,
}

const AppHomeHomeRouteWithChildren = AppHomeHomeRoute._addFileChildren(
  AppHomeHomeRouteChildren,
)

interface AppRouteRouteChildren {
  AppBrowseRouteRoute: typeof AppBrowseRouteRouteWithChildren
  AppLibrariesRouteRoute: typeof AppLibrariesRouteRouteWithChildren
  AppSearchRouteRoute: typeof AppSearchRouteRouteWithChildren
  AppLibraryLibraryIdRouteRoute: typeof AppLibraryLibraryIdRouteRouteWithChildren
  AppHomeHomeRoute: typeof AppHomeHomeRouteWithChildren
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppBrowseRouteRoute: AppBrowseRouteRouteWithChildren,
  AppLibrariesRouteRoute: AppLibrariesRouteRouteWithChildren,
  AppSearchRouteRoute: AppSearchRouteRouteWithChildren,
  AppLibraryLibraryIdRouteRoute: AppLibraryLibraryIdRouteRouteWithChildren,
  AppHomeHomeRoute: AppHomeHomeRouteWithChildren,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface OnboardingRouteRouteChildren {
  OnboardingOnboardingRoute: typeof OnboardingOnboardingRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingOnboardingRoute: OnboardingOnboardingRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AppSearchRouteRouteWithChildren
  '/test': typeof TestRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/onboarding': typeof OnboardingOnboardingRoute
  '/legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/legal/tos': typeof LegalTosRoute
  '/library/$libraryId': typeof AppLibraryLibraryIdRouteRouteWithChildren
  '/browse': typeof AppBrowseBrowseRoute
  '/home': typeof AppHomeHomeRouteWithChildren
  '/libraries': typeof AppLibrariesLibrariesRoute
  '/search': typeof AppSearchSearchRoute
  '/home/analytics': typeof AppHomeHomeAnalyticsRoute
  '/home/recents': typeof AppHomeHomeRecentsRoute
  '/library/$libraryId/': typeof AppLibraryLibraryIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AppSearchRouteRouteWithChildren
  '/test': typeof TestRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/onboarding': typeof OnboardingOnboardingRoute
  '/legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/legal/tos': typeof LegalTosRoute
  '/browse': typeof AppBrowseBrowseRoute
  '/home': typeof AppHomeHomeRouteWithChildren
  '/libraries': typeof AppLibrariesLibrariesRoute
  '/search': typeof AppSearchSearchRoute
  '/home/analytics': typeof AppHomeHomeAnalyticsRoute
  '/home/recents': typeof AppHomeHomeRecentsRoute
  '/library/$libraryId': typeof AppLibraryLibraryIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_onboarding': typeof OnboardingRouteRouteWithChildren
  '/test': typeof TestRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/_app/_browse': typeof AppBrowseRouteRouteWithChildren
  '/_app/_libraries': typeof AppLibrariesRouteRouteWithChildren
  '/_app/_search': typeof AppSearchRouteRouteWithChildren
  '/_onboarding/onboarding': typeof OnboardingOnboardingRoute
  '/legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/legal/tos': typeof LegalTosRoute
  '/_app/library/$libraryId': typeof AppLibraryLibraryIdRouteRouteWithChildren
  '/_app/_browse/browse': typeof AppBrowseBrowseRoute
  '/_app/_home/home': typeof AppHomeHomeRouteWithChildren
  '/_app/_libraries/libraries': typeof AppLibrariesLibrariesRoute
  '/_app/_search/search': typeof AppSearchSearchRoute
  '/_app/_home/home/analytics': typeof AppHomeHomeAnalyticsRoute
  '/_app/_home/home/recents': typeof AppHomeHomeRecentsRoute
  '/_app/library/$libraryId/': typeof AppLibraryLibraryIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/test'
    | '/unauthorized'
    | '/onboarding'
    | '/legal/privacy-policy'
    | '/legal/tos'
    | '/library/$libraryId'
    | '/browse'
    | '/home'
    | '/libraries'
    | '/search'
    | '/home/analytics'
    | '/home/recents'
    | '/library/$libraryId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/test'
    | '/unauthorized'
    | '/onboarding'
    | '/legal/privacy-policy'
    | '/legal/tos'
    | '/browse'
    | '/home'
    | '/libraries'
    | '/search'
    | '/home/analytics'
    | '/home/recents'
    | '/library/$libraryId'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_onboarding'
    | '/test'
    | '/unauthorized'
    | '/_app/_browse'
    | '/_app/_libraries'
    | '/_app/_search'
    | '/_onboarding/onboarding'
    | '/legal/privacy-policy'
    | '/legal/tos'
    | '/_app/library/$libraryId'
    | '/_app/_browse/browse'
    | '/_app/_home/home'
    | '/_app/_libraries/libraries'
    | '/_app/_search/search'
    | '/_app/_home/home/analytics'
    | '/_app/_home/home/recents'
    | '/_app/library/$libraryId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  TestRoute: typeof TestRoute
  UnauthorizedRoute: typeof UnauthorizedRoute
  LegalPrivacyPolicyRoute: typeof LegalPrivacyPolicyRoute
  LegalTosRoute: typeof LegalTosRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  TestRoute: TestRoute,
  UnauthorizedRoute: UnauthorizedRoute,
  LegalPrivacyPolicyRoute: LegalPrivacyPolicyRoute,
  LegalTosRoute: LegalTosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_onboarding",
        "/test",
        "/unauthorized",
        "/legal/privacy-policy",
        "/legal/tos"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/_browse",
        "/_app/_libraries",
        "/_app/_search",
        "/_app/library/$libraryId",
        "/_app/_home/home"
      ]
    },
    "/_onboarding": {
      "filePath": "_onboarding/route.tsx",
      "children": [
        "/_onboarding/onboarding"
      ]
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/unauthorized": {
      "filePath": "unauthorized.tsx"
    },
    "/_app/_browse": {
      "filePath": "_app/_browse/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_browse/browse"
      ]
    },
    "/_app/_libraries": {
      "filePath": "_app/_libraries/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_libraries/libraries"
      ]
    },
    "/_app/_search": {
      "filePath": "_app/_search/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_search/search"
      ]
    },
    "/_onboarding/onboarding": {
      "filePath": "_onboarding/onboarding.tsx",
      "parent": "/_onboarding"
    },
    "/legal/privacy-policy": {
      "filePath": "legal/privacy-policy.tsx"
    },
    "/legal/tos": {
      "filePath": "legal/tos.tsx"
    },
    "/_app/library/$libraryId": {
      "filePath": "_app/library/$libraryId/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/library/$libraryId/"
      ]
    },
    "/_app/_browse/browse": {
      "filePath": "_app/_browse/browse.tsx",
      "parent": "/_app/_browse"
    },
    "/_app/_home/home": {
      "filePath": "_app/_home/home.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_home/home/analytics",
        "/_app/_home/home/recents"
      ]
    },
    "/_app/_libraries/libraries": {
      "filePath": "_app/_libraries/libraries.tsx",
      "parent": "/_app/_libraries"
    },
    "/_app/_search/search": {
      "filePath": "_app/_search/search.tsx",
      "parent": "/_app/_search"
    },
    "/_app/_home/home/analytics": {
      "filePath": "_app/_home/home.analytics.tsx",
      "parent": "/_app/_home/home"
    },
    "/_app/_home/home/recents": {
      "filePath": "_app/_home/home.recents.tsx",
      "parent": "/_app/_home/home"
    },
    "/_app/library/$libraryId/": {
      "filePath": "_app/library/$libraryId/index.tsx",
      "parent": "/_app/library/$libraryId"
    }
  }
}
ROUTE_MANIFEST_END */
